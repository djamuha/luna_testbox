{
	"info": {
		"_postman_id": "65760b86-b0c7-4ac6-bc0c-98c92ed0652d",
		"name": "luna-testbox",
		"description": "The test-box allows to create various cases fro auto-testing project.\nversion 1\n- create base code of framework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8fba6f55-eaa8-49ec-9abc-bc5b5374f1a5",
						"exec": [
							"console.log",
							"('Начало выполнения авто-теста \"' + pm.variables.get('test_id') + ' ' + pm.variables.get('test_name') +'\"');",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "557eb28b-ee22-485c-a37d-54e3af7ea367",
						"exec": [
							"//объявляем переменные",
							"var url = 'http://' + pm.environment.get('host') + '/login';",
							"var login = pm.variables.get('login');",
							"",
							"var json = pm.response.json();",
							"var csrf = json.data.csrf;",
							"",
							"var nextRequest = null;",
							"",
							"//получаем идентификатор авто-теста",
							"test_id = pm.variables.get('test_id');",
							"",
							"if (csrf) ",
							"    //сохраняем токен на глоб. уровне",
							"    pm.globals.set('csrf', csrf);",
							"else",
							"    console.log('Tocken was not got rom Back');",
							"",
							"//отладочный блок по выводу информации в консоль",
							"if (pm.variables.get('debug')) {",
							"    console.log('url: ' + url);",
							"    console.log('значение токена: ' + csrf);",
							"    console.log('ид автотеста: ' + test_id);",
							"}",
							"",
							"//определяем id автотеста",
							"switch (test_id) {",
							"    case 'AT01-01':",
							"        //определяем след. запрос из коллекции",
							"        nextRequest = 'create';",
							"        break;",
							"        ",
							"    default:",
							"        //выводим сообщение об ошибке",
							"        console.log('[ERROR]: авто-тест ' + test_id + ' не определен');",
							"        break; ",
							"}",
							"",
							"//отладочный блок",
							"if (pm.variables.get('debug')) {",
							"    console.log('след. запрос: ' + nextRequest);",
							"}",
							"",
							"//проверяем что след. запрос из коллекции определен",
							"if (nextRequest) {",
							"    //формируем тело запроса login",
							"    const loginRequest = {",
							"        url: url,",
							"        method: 'POST',",
							"        header: {",
							"            \"accept\": \"application/json\",",
							"            \"accept-encoding\": \"gzip, deflate\",",
							"            \"accept-language\": \"ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3\",",
							"            \"cache-control\": \"no-cache\",",
							"            \"connection\": \"keep-alive\",",
							"            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\",",
							"            \"x-requested-with\": \"XMLHttpRequest\",",
							"            \"Content-Type\": \"application/json\"",
							"        },",
							"        body: {",
							"            mode: 'raw',",
							"            raw:  JSON.stringify({\"login\": login, ",
							"                                  \"password\":\"qwerty\",",
							"                                  \"csrf\":csrf})",
							"        }",
							"    };",
							"    ",
							"    //отправляем асинхронный запрос login",
							"    pm.sendRequest(loginRequest, function (err, res) {",
							"        console.log(err ? err :res.json());});",
							"    ",
							"    //переходим к след. запросу из коллекции",
							"    postman.setNextRequest(nextRequest); ",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "accept-language",
						"value": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "connection",
						"value": "keep-alive"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36"
					},
					{
						"key": "x-requested-with",
						"value": "XMLHttpRequest"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}/auth/csrf-token",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"auth",
						"csrf-token"
					]
				},
				"description": "The tocken is first thing when you want to run a test case.\nSimply, send it."
			},
			"response": []
		},
		{
			"name": "post_profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "97d7ea78-cb9a-4982-afa6-5ed303e3fc11",
						"exec": [
							"//объявляем переменные",
							"var url = 'http://' + pm.environment.get('host') + '/login';",
							"var login = pm.variables.get('login');",
							"",
							"var json = pm.response.json();",
							"var csrf = json.data.csrf;",
							"",
							"var nextRequest = null;",
							"",
							"//получаем идентификатор авто-теста",
							"test_id = pm.variables.get('test_id');",
							"",
							"//отладочный блок по выводу информации в консоль",
							"if (pm.variables.get('debug')) console.log('ид автотеста: ' + test_id);",
							"",
							"//определяем id автотеста",
							"switch (test_id) {",
							"    case 'TC-04.01':",
							"        ",
							"        ",
							"        break;",
							"        ",
							"    default:",
							"        //выводим сообщение об ошибке",
							"        console.log('[ERROR]: авто-тест ' + test_id + ' не определен');",
							"        break; ",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"csrf\":\"{{csrf}}\"\n,\"name\":\"{{name}}\"}"
				},
				"url": {
					"raw": "http://{{host}}/profile",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "Allows send some changes in the user profile to Back-end"
			},
			"response": []
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d55e8a0b-b214-4c43-bf1a-1b6cbfad2761",
						"exec": [
							"//получаем тело ответа в формате JSON",
							"var json = pm.response.json();",
							"",
							"var nextRequest; /*след. запрос из коллекции*/",
							"",
							"//результат теста - по умолчанию равен 'Failed'",
							"var testResult = 'Fail';",
							"",
							"//получаем идентификатор авто-теста",
							"var test_id = pm.variables.get('test_id');",
							"",
							"//отладочный блок",
							"if (pm.variables.get('debug')) {",
							"    console.log('ид автотеста: ' + test_id);",
							"}",
							"",
							"//определяем дальнейшую логику для авто-теста",
							"switch (test_id) {",
							"    case 'AT01-01':",
							"        //проверка сведений по добавленному объявлению в теле ответа",
							"        pm.test(\"response body contains added product\", function () {",
							"            //pm.expect(json.data.naturalPerson.first_name).to.eql(pm.variables.get('first_name'));",
							"            ",
							"            ",
							"            //Pass - если все assertions успешно прошли + комментарий",
							"            testResult = 'Pass';",
							"            testComment = 'The product was added successfuly';",
							"        });",
							"        ",
							"        //определяем след. запрос из коллекции",
							"        nextRequest = 'image_upload';",
							"        break;",
							"    ",
							"    default:",
							"        //выводим сообщение об ошибке",
							"        console.log('[ERROR]: авто-тест ' + test_id + ' не определен');",
							"        ",
							"        //зануляем ключевые переменные",
							"        test_id = null;",
							"        nextRequest = null;",
							"        testResult = null;",
							"        break;",
							"}",
							"",
							"",
							"//переходим к след. запросу из коллекции",
							"if (nextRequest) {",
							"   postman.setNextRequest(nextRequest); ",
							"}",
							"",
							"if (testResult == 'Fail') {",
							"    //выводим в лог сведения о неуспешности выполнения кейса",
							"    console.log('[ERROR]: ' + pm.variables.get('test_id') + '.' + pm.variables.get('test_name') + ' was failed');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate",
						"type": "text"
					},
					{
						"key": "accept-language",
						"value": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3",
						"type": "text"
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
						"type": "text"
					},
					{
						"key": "x-requested-with",
						"value": "XMLHttpRequest",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"csrf\":\"{{csrf}}\"\n,\"categoryId\":\"{{categoryID}}\"\n,\"subcategoryId\":\"{{subcategory}}\"\n,\"name\":\"{{name}}\"\n,\"price\":\"{{price}}\"\n,\"description\":\"{{description}}\"\n,\"safe_deal\":\"{{safe_deal}}\"\n,\"address\":\n\t{\"country\":\"{{country}}\"\n\t,\"region\":\"{{region}}\"\n\t,\"city\":\"{{city}}\"\n\t,\"street\":\"{{street}}\"\n\t,\"house\":\"{{house}}\"\n\t,\"index\":\"{{index}}\"\n\t,\"longitude\":\"{{longitude}}\"\n\t,\"latitude\":\"{{latitude}}\"\n\t,\"lat\":\"{{lat}}\"\n\t,\"lng\":\"{{lng}}\"\n\t}\n,\"category\":\"{{category}}\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/create",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"create"
					]
				},
				"description": "Allows to create new product"
			},
			"response": []
		},
		{
			"name": "image_upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20e5d921-101c-4487-935a-f47470e6d782",
						"exec": [
							"//определяем след. запрос из коллекции",
							"nextRequest = 'post_product';",
							"",
							"postman.setNextRequest(nextRequest);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate",
						"type": "text"
					},
					{
						"key": "accept-language",
						"value": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3",
						"type": "text"
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
						"type": "text"
					},
					{
						"key": "x-requested-with",
						"value": "XMLHttpRequest",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"description": "bed_bug-1000x998.png",
							"type": "file",
							"src": ""
						},
						{
							"key": "",
							"value": "name",
							"description": "image",
							"type": "text"
						},
						{
							"key": "",
							"value": "Content-Type",
							"description": "image/png",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{host}}/product/image/upload",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"image",
						"upload"
					]
				},
				"description": "Allows to add picture to product"
			},
			"response": []
		},
		{
			"name": "post_product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a09a108a-ff3d-44ef-96e9-8c055f4b5712",
						"exec": [
							"//получаем тело ответа в формате JSON",
							"var json = pm.response.json();",
							"",
							"var nextRequest; /*след. запрос из коллекции*/",
							"",
							"//получаем идентификатор авто-теста",
							"var test_id = pm.variables.get('test_id');",
							"",
							"//отладочный блок",
							"if (pm.variables.get('debug')) {",
							"    console.log('ид автотеста: ' + test_id);",
							"}",
							"",
							"//определяем дальнейшую логику для авто-теста",
							"switch (test_id) {",
							"    case 'AT01-01':",
							"        ",
							"        //определяем след. запрос из коллекции",
							"        nextRequest = 'logout';",
							"        break;",
							"    ",
							"    default:",
							"        //выводим сообщение об ошибке",
							"        console.log('[ERROR]: авто-тест ' + test_id + ' не определен');",
							"        ",
							"        //зануляем ключевые переменные",
							"        test_id = null;",
							"        nextRequest = null;",
							"        break;",
							"}",
							"",
							"//переходим к след. запросу из коллекции",
							"if (nextRequest) {",
							"   postman.setNextRequest(nextRequest); ",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate",
						"type": "text"
					},
					{
						"key": "accept-language",
						"value": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3",
						"type": "text"
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"type": "text"
					},
					{
						"key": "connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",
						"type": "text"
					},
					{
						"key": "x-requested-with",
						"value": "XMLHttpRequest",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/javascript",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"csrf\":\"{{csrf}}\"\n,\"preview_product_confirm\":\"1\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8ca11e4-f9c0-41b0-a1f2-d05109b1eed2",
						"exec": [
							"console.log('Завершение выполнения авто-теста \"' + pm.variables.get('test_id') + ' ' + pm.variables.get('test_name') +'\"');",
							"",
							"//полностью очищаем глобальный контекст",
							"pm.globals.clear();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "accept-encoding",
						"value": "gzip, deflate"
					},
					{
						"key": "accept-language",
						"value": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					},
					{
						"key": "connection",
						"value": "keep-alive"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36"
					},
					{
						"key": "x-requested-with",
						"value": "XMLHttpRequest"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {},
				"url": {
					"raw": "http://{{host}}/logout",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1a9c394c-1b2e-423b-bd52-ba6d94eaf208",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "680f3638-ebce-46bc-bd5e-da5d481ce6cd",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response code is 200\", function() {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "db579d8e-c3f3-46a3-a75e-084cf41aa374",
			"key": "test_id",
			"value": "",
			"type": "string"
		},
		{
			"id": "bea4ad42-a7fa-4ae8-a4b5-3a9be66fcfdf",
			"key": "test_name",
			"value": "",
			"type": "string"
		},
		{
			"id": "2b15985f-591a-49b5-b33a-c837f2e984b7",
			"key": "login",
			"value": "",
			"type": "string"
		},
		{
			"id": "5b1b95a1-4b51-4102-883c-4b403359d6f9",
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"id": "d83db384-19f3-4247-8773-ec13d9f762f3",
			"key": "categoryID",
			"value": "",
			"type": "string"
		},
		{
			"id": "a59e5a05-646c-4faa-b307-999fb29de65b",
			"key": "subcategory",
			"value": "",
			"type": "string"
		},
		{
			"id": "a7b9417e-8bb3-44c4-8dea-8e0133edd7fb",
			"key": "price",
			"value": "",
			"type": "string"
		},
		{
			"id": "7efc4156-0f8e-4ac0-ae8c-62d0ff67306b",
			"key": "description",
			"value": "",
			"type": "string"
		},
		{
			"id": "7a0d880a-3fb1-4f25-a86f-66cdb38dbbee",
			"key": "safe_deal",
			"value": "",
			"type": "string"
		},
		{
			"id": "eb98f6de-7b50-4724-b9ae-f15d02fed210",
			"key": "country",
			"value": "",
			"type": "string"
		},
		{
			"id": "5db73fa3-eff4-4f53-942e-d3460c07174f",
			"key": "region",
			"value": "",
			"type": "string"
		},
		{
			"id": "4058182e-70dc-4821-b31a-e75fae74fb71",
			"key": "city",
			"value": "",
			"type": "string"
		},
		{
			"id": "e6b83594-e664-4ec9-8ec1-bb841c98a7cf",
			"key": "street",
			"value": "",
			"type": "string"
		},
		{
			"id": "7dcd6bd3-94dd-48b4-bf3b-8f6f30a946cb",
			"key": "house",
			"value": "",
			"type": "string"
		},
		{
			"id": "4d20644b-503b-41f6-9517-64ef312a0856",
			"key": "index",
			"value": "",
			"type": "string"
		},
		{
			"id": "036be170-74cb-40eb-9683-46ff044b1ad7",
			"key": "longitude",
			"value": "",
			"type": "string"
		},
		{
			"id": "ddf11ecc-b0a6-48df-8d68-3109e36e9bab",
			"key": "latitude",
			"value": "",
			"type": "string"
		},
		{
			"id": "b88450f3-2d05-4eda-95cc-cb7bf1eaf459",
			"key": "lat",
			"value": "",
			"type": "string"
		},
		{
			"id": "50659b43-859e-4624-b24a-f4936d438310",
			"key": "lng",
			"value": "",
			"type": "string"
		},
		{
			"id": "f410be81-ff96-4077-9287-4c71a1059421",
			"key": "category",
			"value": "",
			"type": "string"
		},
		{
			"id": "cc99256d-c423-45bd-9755-0ceb6c051f6e",
			"key": "debug",
			"value": "",
			"type": "string"
		}
	]
}